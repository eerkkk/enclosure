root: true
env:
  browser: true
  es6: true
  node: true
extends:
  - "eslint:recommended"
  - "plugin:@typescript-eslint/recommended"
  - "plugin:import/errors"
  - "plugin:import/warnings"
  - "plugin:import/typescript"
  - "plugin:typescript-sort-keys/recommended"
  - "plugin:react/recommended"
parser: "@typescript-eslint/parser"
parserOptions:
  project: 
    - "./src/tsconfig.json"
  ecmaFeatures:
    jsx: true
plugins:
  - eslint-plugin-import
  - eslint-plugin-no-null
  - "@typescript-eslint"
  - react
rules:
  "@typescript-eslint/adjacent-overload-signatures": error
  "@typescript-eslint/array-type":
    - error
    - default: generic
  "@typescript-eslint/await-thenable": error
  "@typescript-eslint/ban-ts-comment": error
  "@typescript-eslint/ban-types": error
  "@typescript-eslint/brace-style": 
    - error
    - stroustrup
  "@typescript-eslint/comma-dangle": error
  "@typescript-eslint/comma-spacing": error
  "@typescript-eslint/consistent-type-assertions": error
  "@typescript-eslint/consistent-type-definitions": error
  "@typescript-eslint/dot-notation": error
  "@typescript-eslint/explicit-module-boundary-types": warn
  "@typescript-eslint/func-call-spacing": error
  "@typescript-eslint/indent": # there are lots of issues with this apparently
    - error
    - tab
  "@typescript-eslint/keyword-spacing": error
  "@typescript-eslint/member-delimiter-style":
    - error
    - multiline:
        delimiter: semi
        requireLast: true
      singleline:
        delimiter: semi
        requireLast: false
  "@typescript-eslint/member-ordering":
    - error
    - interfaces: [signature, method, constructor, field]
  #
  # for all naming-convention options https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/naming-convention.md
  #
  "@typescript-eslint/naming-convention":
    - error
    # for all code camelCase is default
    - selector: default
      format:
        - camelCase
    - selector: variable
      format:
        - camelCase
        - UPPER_CASE
    - selector: variable
      filter: "Component$"
      format:
        - PascalCase
    - selector: variable
      types: 
      - 'function'
      format:
        - PascalCase
        - camelCase
    # allows destructured variables to use any format
    - selector: variable
      format: null
      modifiers: 
        - destructured
    - selector: parameter
      format:
        - PascalCase
        - camelCase
      leadingUnderscore: allow
    - selector: 
      - interface
      - class      
      format: 
        - PascalCase
    - selector: method
      format:
        - PascalCase
        - camelCase  
    - selector: memberLike
      format: null
    - selector: typeAlias
      format: 
        - PascalCase
    - selector: typeParameter
      format:
        - PascalCase
  "@typescript-eslint/no-array-constructor": error
  "@typescript-eslint/no-empty-function": error
  "@typescript-eslint/no-empty-interface": warn
  "@typescript-eslint/no-explicit-any": "off"
  "@typescript-eslint/no-extra-parens": "off"
  "@typescript-eslint/no-extra-semi": "off"
  "@typescript-eslint/no-floating-promises": error
  "@typescript-eslint/no-for-in-array": error
  "@typescript-eslint/no-inferrable-types": error
  "@typescript-eslint/no-misused-new": error
  "@typescript-eslint/no-namespace": error
  "@typescript-eslint/no-non-null-asserted-optional-chain": error
  "@typescript-eslint/no-non-null-assertion": warn
  "@typescript-eslint/no-shadow":
    - "off"
    - hoist: all
  "@typescript-eslint/no-this-alias": error
  "@typescript-eslint/no-unnecessary-boolean-literal-compare": error
  "@typescript-eslint/no-unused-expressions": error
  "@typescript-eslint/no-unused-vars": warn
  "@typescript-eslint/no-var-requires": error
  "@typescript-eslint/object-curly-spacing": 
    - error
    - always
  "@typescript-eslint/padding-line-between-statements":
    - error
    - blankLine: always
      prev: "*"
      next: "return"
    - blankLine: always
      prev: "*"
      next: "export"
    - blankLine: always
      prev: 
      - "block-like"
      - "const"
      - "let"
      - "var"
      next: "*"
    - blankLine: any
      prev: 
      - "block-like"
      - "const"
      - "let"
      - "var"
      next: 
      - "const"
      - "let"
      - "var"
  "@typescript-eslint/prefer-as-const": error
  "@typescript-eslint/prefer-namespace-keyword": error
  "@typescript-eslint/prefer-readonly": error
  "@typescript-eslint/quotes":
    - error
    - single
    - avoidEscape: true
  "@typescript-eslint/restrict-plus-operands": error
  "@typescript-eslint/semi":
    - error
    - always
  "@typescript-eslint/space-before-function-paren": 
    - error
    - anonymous: never
      named: never
      asyncArrow: always
  "@typescript-eslint/space-infix-ops":
    - error
    - int32Hint: false
  "@typescript-eslint/strict-boolean-expressions": "off"
  "@typescript-eslint/triple-slash-reference": error
  "@typescript-eslint/type-annotation-spacing": error
  "@typescript-eslint/unbound-method": error

  accessor-pairs: error
  array-bracket-newline: "off"
  array-bracket-spacing: 
    - error
    - always
  array-element-newline: "off"
  arrow-parens:
    - error
    - always
  arrow-spacing: "off"
  block-spacing: "off"
  brace-style: "off"
  comma-dangle: "off"
  comma-spacing: "off"
  comma-style: "off"
  computed-property-spacing: 
    - error
    - always
  constructor-super: error
  curly: error
  default-case: "off"
  dot-location: "off"
  eol-last: error
  eqeqeq:
    - error
    - always
  for-direction: error
  func-call-spacing: "off"
  function-call-argument-newline: "off"
  function-paren-newline: "off"
  generator-star: "off"
  generator-star-spacing: "off"
  getter-return: error
  guard-for-in: error
  id-blacklist:
    - error
    - any
    - Number
    - number
    - String
    - string
    - Boolean
    - boolean
    - Undefined
    - undefined
  id-match: error
  implicit-arrow-linebreak: "off"
  import/default: error
  import/export: error
  import/named: "off"
  import/namespace: error
  import/no-deprecated: error
  import/no-duplicates: warn
  import/no-extraneous-dependencies: [
    "error", {
      "devDependencies": true,
      "optionalDependencies": false,
      "peerDependencies": false
    }
  ]
  import/no-named-as-default-member: warn
  import/no-unresolved: error
  import/order: 
    - error
    - alphabetize:
        order: asc
        caseInsensitive: true
      newlines-between: always
  indent: "off"
  indent-legacy: "off"
  key-spacing: error
  keyword-spacing: "off"
  linebreak-style: "off"
  lines-around-comment: "off"
  max-classes-per-file:
    - error
    - 1
  max-len: "off"
  multiline-ternary: 
    - error
    - never
  new-parens: "off"
  newline-per-chained-call: "off"
  no-arrow-condition: "off"
  no-async-promise-executor: error
  no-bitwise: error
  no-caller: error
  no-case-declarations: error
  no-class-assign: error
  no-comma-dangle: "off"
  no-compare-neg-zero: error
  no-cond-assign: error
  no-confusing-arrow: "off"
  no-console: "off" # Remove this before going to production
  no-const-assign: error
  no-constant-condition: error
  no-control-regex: error
  no-debugger: error
  no-delete-var: error
  no-dupe-args: error
  no-dupe-class-members: error
  no-dupe-else-if: error
  no-dupe-keys: error
  no-duplicate-case: error
  no-duplicate-imports: error
  no-else-return: error
  no-empty: error
  no-empty-character-class: error
  no-empty-pattern: error
  no-eval: error
  no-ex-assign: error
  no-extra-boolean-cast: error
  no-extra-parens: "off"
  no-extra-semi: "off"
  no-fallthrough: error
  no-floating-decimal: "off"
  no-func-assign: error
  no-global-assign: error
  no-import-assign: error
  no-inner-declarations: error
  no-invalid-regexp: error
  no-invalid-this: "off"
  no-irregular-whitespace: error
  no-magic-numbers: "off"
  no-misleading-character-class: error
  no-mixed-operators: "off"
  no-mixed-spaces-and-tabs: "off"
  no-multi-spaces: "off"
  no-multiple-empty-lines: 
    - error
    - max: 1
  no-nested-ternary: error
  no-unneeded-ternary: error
  no-new-symbol: error
  no-new-wrappers: error
  no-null/no-null: "off"
  no-obj-calls: error
  no-octal: error
  no-plusplus: "off"
  no-prototype-builtins: error
  no-redeclare: error
  no-regex-spaces: error
  no-reserved-keys: "off"
  no-return-await: error
  no-self-assign: error
  no-sequences: error
  no-setter-return: error
  no-shadow-restricted-names: error
  no-space-before-semi: "off"
  no-spaced-func: "off"
  no-sparse-arrays: error
  no-tabs: "off"
  no-template-curly-in-string: error
  no-this-before-super: error
  no-throw-literal: error
  no-trailing-spaces: error
  no-undef: "off"
  no-underscore-dangle: error
  no-unexpected-multiline: "off"
  no-unreachable: error
  no-unsafe-finally: error
  no-unsafe-negation: error
  no-unused-labels: "off"
  no-unused-vars: "off"
  no-useless-catch: error
  no-useless-escape: error
  no-var: error
  no-whitespace-before-property: "off"
  no-with: error
  no-wrap-func: "off"
  nonblock-statement-body-position: "off"
  object-curly-newline: error
  object-curly-spacing: "off"
  object-property-newline: 
    - error
    - allowAllPropertiesOnSameLine: true
      allowMultiplePropertiesPerLine: false
  object-shorthand: error
  one-var:
    - error
    - never
  one-var-declaration-per-line: "off"
  operator-linebreak: "off"
  padded-blocks: "off"
  padding-line-between-statements: "off"
  prefer-const: error
  prefer-destructuring:
    - warn
    - VariableDeclarator:
        array: false
        object: true
      AssignmentExpression:
        array: true
        object: false
    - enforceForRenamedProperties: false
  prefer-object-spread: error
  prefer-template: error
  quote-props:
    - error
    - as-needed
  quotes: 
    - error
    - single
  require-yield: error
  rest-spread-spacing: error
  semi: error
  semi-spacing: "off"
  semi-style: "off"
  sort-keys:
    - error
    - asc
    - caseSensitive: true
      natural: true
      minKeys: 2
  sort-vars: 
    - error
  space-after-function-name: "off"
  space-after-keywords: "off"
  space-before-blocks: error
  space-before-function-paren: "off"
  space-before-function-parentheses: "off"
  space-before-keywords: "off"
  space-in-parens:
    - error
    - never
  space-infix-ops: "off"
  space-return-throw-case: "off"
  space-unary-ops: 
    - error
    - words: true
      nonwords: false
  switch-colon-spacing: warn
  template-curly-spacing: "off"
  template-tag-spacing: "off"
  unicode-bom: "off"
  use-isnan: error
  valid-typeof: error
  wrap-iife: "off"
  wrap-regex: "off"
  yield-star-spacing: "off"
  yoda: error
  react/jsx-boolean-value: error
  react/jsx-curly-spacing: 
  - error
  - when: always
    children: true
  react/jsx-equals-spacing:
  - error
  - never
  react/jsx-key: error
  react/jsx-no-bind: "off"
  react/jsx-wrap-multilines: error
  react/prop-types: "off"
  react/self-closing-comp: error
  react/jsx-closing-bracket-location:
  - error
  - nonEmpty: "after-props"
    selfClosing: "after-props"
  react/jsx-max-props-per-line:
  - error
  - when: "multiline"
settings:
  react:
    version: "detect"
  import/parsers: 
    "@typescript-eslint/parser": 
    - ".ts"
    - ".tsx"
  import/resolver:
    typescript: 
      alwaysTryTypes: true
    node:
      extensions:
      - ".ts"
      - ".tsx"
      - ".d.ts"
      - ".js"
      - ".jsx"
      paths:
      - src 